import express from "express";
import mongoose from "mongoose";

import Message from "../models/Message.js";

const router = express.Router();

// ‚úÖ Danh s√°ch user t·ª´ng nh·∫Øn
router.get("/users", async (req, res) => {
    try {
        const messages = await Message.find({});
        const uniqueUsers = [
            ...new Set(messages.map((msg) => msg.senderId.toString())),
        ];
        res.json(uniqueUsers);
    } catch (err) {
        res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng" });
    }
});

// L·∫•y t·∫•t c·∫£ tin nh·∫Øn gi·ªØa 2 ng∆∞·ªùi
// ‚úÖ Route c·ª• th·ªÉ h∆°n l√™n tr∆∞·ªõc
router.get("/user/:userId", async (req, res) => {
    const { userId } = req.params;

    try {
        const messages = await Message.find({
            $or: [{ senderId: userId }, { receiverId: userId }],
        }).sort({ createdAt: 1 });

        res.json(messages);
    } catch (err) {
        res.status(500).json({ message: "L·ªói khi l·∫•y tin nh·∫Øn v·ªõi user" });
    }
});

// ‚úÖ L·∫•y tin nh·∫Øn gi·ªØa 2 ng∆∞·ªùi b·∫•t k·ª≥
// router.get("/:userId/:staffId", async (req, res) => {
//     const { userId, staffId } = req.params;

//     try {
//         const messages = await Message.find({
//             $or: [
//                 { senderId: userId, receiverId: staffId },
//                 { senderId: staffId, receiverId: userId },
//             ],
//         }).sort({ createdAt: 1 });

//         res.json(messages);
//     } catch (err) {
//         res.status(500).json({ message: "L·ªói khi l·∫•y tin nh·∫Øn" });
//     }
// });

router.get("/:userId/:staffId", async (req, res) => {
    const { userId, staffId } = req.params;

    if (
        !mongoose.Types.ObjectId.isValid(userId) ||
        !mongoose.Types.ObjectId.isValid(staffId)
    ) {
        return res.status(400).json({ message: "ID kh√¥ng h·ª£p l·ªá" });
    }

    try {
        // üëâ Ch·ªâ l·ªçc theo userId
        const messages = await Message.find({
            $or: [
                { senderId: userId },
                { receiverId: userId },
            ],
        }).sort({ createdAt: 1 });

        res.json(messages);
    } catch (err) {
        console.error("‚ùå L·ªói truy v·∫•n tin nh·∫Øn:", err);
        res.status(500).json({ message: "L·ªói khi l·∫•y tin nh·∫Øn" });
    }
});



export default router;
